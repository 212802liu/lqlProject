<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 日志存放路径 -->
    <property name="log.path" value="logs/webflux"/>
    <!-- 日志输出格式 -->
    <property name="log.pattern"
              value="[%d{yyyy-MM-dd HH:mm:ss.SSS}]-[%thread] %-5level %logger{20} - [%method,%line] - %msg%n"/>

    <!-- 控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>

    <!-- 系统日志输出 -->
    <appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/info.log</file>
        <!-- 循环政策：基于时间、大小创建日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${log.path}/info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <!--    LevelFilter: 适用于需要对不同日志级别进行复杂处理的情况，例如同时允许 INFO 和 ERROR，但拒绝 DEBUG。
                ThresholdFilter: 适用于简单的日志记录需求，只需接受某个级别及以上的日志，例如希望记录 DEBUG 及以上的所有日志。-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 过滤的级别 -->
            <level>debug</level>
            <!-- 匹配时的操作：接收（记录） -->
            <!--            <onMatch>ACCEPT</onMatch>-->
            <!-- 不匹配时的操作：拒绝（不记录）  当日志级别不匹配（例如 ERROR）时，操作为 DENY，即拒绝并不记录该日志。 -->
            <!--            <onMismatch>ACCEPT</onMismatch>-->
        </filter>
    </appender>

    <appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/error.log</file>
        <!-- 循环政策：基于时间创建日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${log.path}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <!--        就是通过这个过滤器，才实现的 文件里 只有 error 日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>ERROR</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录）  当日志级别不匹配（例如 ERROR）时，操作为 DENY，即拒绝并不记录该日志。 -->

            <onMismatch>DENY</onMismatch>
        </filter>

<!--        <turboFilter class="ch.qos.logback.classic.turbo.DynamicThresholdFilter">-->
<!--            <DefaultThreshold>ERROR</DefaultThreshold>-->
<!--            <OnHigherOrEqual>ACCEPT</OnHigherOrEqual>-->
<!--            <OnLower>NEUTRAL</OnLower>-->
<!--            <Key>userRole</Key>-->
<!--            <MDCValueLevelPair>-->
<!--                <value>admin</value>-->
<!--                <level>DEBUG</level>-->
<!--            </MDCValueLevelPair>-->
<!--            <MDCValueLevelPair>-->
<!--                <value>dba</value>-->
<!--                <level>INFO</level>-->
<!--            </MDCValueLevelPair>-->
<!--            <MDCValueLevelPair>-->
<!--                <value>user</value>-->
<!--                <level>WARN</level>-->
<!--            </MDCValueLevelPair>-->
<!--        </turboFilter>-->
    </appender>

    <!-- 系统模块日志级别控制  -->
    <logger name="com.example" level="info"/>
    <!-- Spring日志级别控制  -->
    <logger name="org.springframework" level="warn"/>

    <logger name="org.springframework.r2dbc" level="debug"/>

    <root level="info">
        <appender-ref ref="console"/>
    </root>

    <!--系统操作日志-->
    <root level="info">
        <appender-ref ref="file_info"/>
        <appender-ref ref="file_error"/>
    </root>
</configuration>